{"version":3,"sources":["Microcosm.js","webpack/bootstrap f31c49793fca00fc8aa8","./src/index.js","./src/mapBy.js","./src/Microcosm.js","./src/Store.js","./src/assert.js","./src/assign.js","./src/pulse.js","./src/tag.js","./~/is-equal-shallow/index.js","./~/is-equal-shallow/~/is-primitive/index.js"],"names":["module","exports","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","__esModule","tag","mapBy","array","fn","reduce","memo","next","_interopRequire","obj","_classCallCheck","instance","Constructor","TypeError","Store","assert","assign","isEqual","pulse","Microcosm","this","_state","getInitialState","_stores","prototype","shouldUpdate","prev","has","key","some","store","get","swap","reset","pump","prepare","_send","_len","arguments","length","buffer","Array","_key","send","bind","apply","concat","_this","params","request","Promise","then","body","dispatch","action","answerable","filter","changes","addStore","safe","push","_swap","serialize","deserialize","data","undefined","seed","toJSON","state","toString","Error","bool","message","error","framesToPop","a","b","_extends","Object","target","i","source","hasOwnProperty","infuse","callbacks","ignore","callback","listen","isFunction","value","decorate","copy","uid","actions","keys","isPrimitive"],"mappings":"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","file":"Microcosm.js","sourcesContent":["module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\n\texports.__esModule = true;\n\t/**\n\t * Microcosm\n\t * An isomorphic flux implimentation. The strength of Microcosm\n\t * is that each application is its own fully encapsulated world\n\t */\n\n\tvar tag = __webpack_require__(7);\n\texports.tag = tag;\n\texports[\"default\"] = __webpack_require__(2);\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*\n\t * MapBy\n\t * Take a list and reduce it into an object\n\t */\n\n\t\"use strict\";\n\n\tmodule.exports = mapBy;\n\n\tfunction mapBy(array, fn) {\n\t  return array.reduce(function (memo, next) {\n\t    memo[next] = fn(next);\n\t    return memo;\n\t  }, {});\n\t}\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\n\tvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj[\"default\"] : obj; };\n\n\tvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } };\n\n\t/**\n\t * Microcosm\n\t * An isomorphic flux implimentation. The strength of Microcosm\n\t * is that each application is its own fully encapsulated world\n\t */\n\n\tvar Store = _interopRequire(__webpack_require__(3));\n\n\tvar assert = _interopRequire(__webpack_require__(4));\n\n\tvar assign = _interopRequire(__webpack_require__(5));\n\n\tvar isEqual = _interopRequire(__webpack_require__(8));\n\n\tvar mapBy = _interopRequire(__webpack_require__(1));\n\n\tvar pulse = _interopRequire(__webpack_require__(6));\n\n\tvar Microcosm = (function () {\n\t  function Microcosm() {\n\t    _classCallCheck(this, Microcosm);\n\n\t    pulse(this);\n\n\t    this._state = this.getInitialState();\n\t    this._stores = [];\n\t  }\n\n\t  Microcosm.prototype.getInitialState = function getInitialState() {\n\t    // Assigns the default state. Most of the time this will not need\n\t    // to be overridden, however if using something like ImmutableJS,\n\t    // you could return a different data structure here.\n\t    return {};\n\t  };\n\n\t  Microcosm.prototype.shouldUpdate = function shouldUpdate(prev, next) {\n\t    // Whenever an action is dispatched, the resulting state\n\t    // modification will be diffed to identify if a change event\n\t    // should fire.\n\t    //\n\t    // The default strategy for determining that state has changed\n\t    // is a simple shallow equals check\n\t    return isEqual(prev, next) === false;\n\t  };\n\n\t  Microcosm.prototype.has = function has(key) {\n\t    // Does this instance of microcosm contain the given store?\n\t    // Important: Uses the unique identifier, not the object reference\n\t    return this._stores.some(function (store) {\n\t      return \"\" + key === \"\" + store;\n\t    });\n\t  };\n\n\t  Microcosm.prototype.get = function get(key) {\n\t    // How state should be retrieved. This function is useful to\n\t    // override with the particular method of retrieval for the data\n\t    // structure returned from `getInitialState`\n\t    return this._state[key];\n\t  };\n\n\t  Microcosm.prototype.swap = function swap(next) {\n\t    // Swap is basically a reset where the next state is the result of\n\t    // folding one object over the next\n\t    this.reset(assign(this._state, next));\n\t  };\n\n\t  Microcosm.prototype.reset = function reset(next) {\n\t    // Given a next state, only trigger an event if state actually changed\n\t    if (this.shouldUpdate(this._state, next)) {\n\t      this._state = next;\n\t      this.pump();\n\t    }\n\t  };\n\n\t  Microcosm.prototype.prepare = function prepare(fn) {\n\t    var _send;\n\n\t    for (var _len = arguments.length, buffer = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t      buffer[_key - 1] = arguments[_key];\n\t    }\n\n\t    return (_send = this.send).bind.apply(_send, [this, fn].concat(buffer));\n\t  };\n\n\t  Microcosm.prototype.send = function send(fn) {\n\t    var _this = this;\n\n\t    for (var _len = arguments.length, params = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t      params[_key - 1] = arguments[_key];\n\t    }\n\n\t    var request = fn.apply(this, params);\n\n\t    // Actions some times return promises. When this happens, wait for\n\t    // them to resolve before moving on\n\t    if (request instanceof Promise) {\n\t      return request.then(function (body) {\n\t        return _this.dispatch(fn, body);\n\t      });\n\t    }\n\n\t    return this.dispatch(fn, request);\n\t  };\n\n\t  Microcosm.prototype.dispatch = function dispatch(action, body) {\n\t    var _this = this;\n\n\t    // First get all stores that can repond to this action\n\t    var answerable = this._stores.filter(function (store) {\n\t      return action in store;\n\t    });\n\n\t    // Next build the change set\n\t    var changes = mapBy(answerable, function (store) {\n\t      return store[action](_this.get(store), body);\n\t    });\n\n\t    // Produce the next state by merging changes into the current state\n\t    this.swap(changes);\n\n\t    // Send back the body to the original signaler\n\t    return body;\n\t  };\n\n\t  Microcosm.prototype.addStore = function addStore(store) {\n\t    // Make sure life cycle methods are included\n\t    var safe = assign(Store, store);\n\n\t    // Don't reassign stores that are already included. Fail hard.\n\t    assert(!this.has(safe), \"Tried to add \\\"\" + store + \"\\\" but it is not unique\");\n\n\t    // Add the validated stores to the list of known entities\n\t    this._stores.push(safe);\n\n\t    // Once verified, setup initial state. This is done last so that\n\t    // any callbacks that need to reduce over the current state have\n\t    // the latest list of stores\n\t    this.swap((function () {\n\t      var _swap = {};\n\t      _swap[safe] = safe.getInitialState();\n\t      return _swap;\n\t    })());\n\t  };\n\n\t  Microcosm.prototype.serialize = function serialize() {\n\t    var _this = this;\n\n\t    return mapBy(this._stores, function (store) {\n\t      return store.serialize(_this.get(store));\n\t    });\n\t  };\n\n\t  Microcosm.prototype.deserialize = function deserialize() {\n\t    var data = arguments[0] === undefined ? {} : arguments[0];\n\n\t    return mapBy(this._stores, function (store) {\n\t      return store.deserialize(data[store]);\n\t    });\n\t  };\n\n\t  Microcosm.prototype.seed = function seed(data) {\n\t    // Tells the microcosm how it should handle data injected from\n\t    // sources.\n\t    //\n\t    // By default, it will clean the data with `deserialize` and\n\t    // then reset the existing data set with the new values\n\t    this.reset(this.deserialize(data));\n\t  };\n\n\t  Microcosm.prototype.toJSON = function toJSON() {\n\t    return this.serialize();\n\t  };\n\n\t  return Microcosm;\n\t})();\n\n\tmodule.exports = Microcosm;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\n\tmodule.exports = {\n\n\t  getInitialState: function getInitialState() {\n\t    return undefined;\n\t  },\n\n\t  serialize: function serialize(state) {\n\t    return state;\n\t  },\n\n\t  deserialize: function deserialize() {\n\t    var state = arguments[0] === undefined ? this.getInitialState() : arguments[0];\n\n\t    return state;\n\t  },\n\n\t  toString: function toString() {\n\t    throw new Error(\"Stores must implement a toString() method\");\n\t  }\n\n\t};\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * assert\n\t * If not true, throw an error\n\t */\n\n\t\"use strict\";\n\n\tmodule.exports = assert;\n\n\tfunction assert(bool, message) {\n\t  if (!bool) {\n\t    var error = new Error(message);\n\n\t    // Remove `assert` from the stack\n\t    error.framesToPop = 1;\n\n\t    throw error;\n\t  }\n\t}\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n\t/**\n\t * assign\n\t * Non-destructively assign one object into another\n\t */\n\n\tmodule.exports = assign;\n\n\tfunction assign(a, b) {\n\t  return _extends({}, a, b);\n\t}\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Pulse\n\t * A singular event emitter. Pulse is simply the result of pumping\n\t * blood.\n\t *\n\t * This is a factory/decorator depending on usage. There are some\n\t * compression benefits to this, prevents the need to use super.\n\t */\n\n\t\"use strict\";\n\n\tfunction pulse() {\n\t  var infuse = arguments[0] === undefined ? {} : arguments[0];\n\n\t  var callbacks = [];\n\n\t  /**\n\t   * Given a CALLBACK function, remove it from the Set of callbacks.\n\t   * Throws an error if the callback is not included in the Set.\n\t   */\n\t  infuse.ignore = function (callback) {\n\t    callbacks = callbacks.filter(function (i) {\n\t      return i !== callback;\n\t    });\n\t  };\n\n\t  /**\n\t   * Given a CALLBACK function, add it to the Set of all callbacks.\n\t   */\n\t  infuse.listen = function (callback) {\n\t    callbacks.push(callback);\n\t  };\n\n\t  /**\n\t   * Trigger every callback in the Set\n\t   */\n\t  infuse.pump = function () {\n\t    /**\n\t     * Important: do not cache the length of _callbacks\n\t     * in the event a callback causes later subscriptions\n\t     * to disappear\n\t     */\n\t    for (var i = 0; i < callbacks.length; i++) {\n\t      callbacks[i].call(this);\n\t    }\n\t  };\n\n\t  return infuse;\n\t}\n\n\tmodule.exports = pulse;\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\n\tvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj[\"default\"] : obj; };\n\n\t/**\n\t * Tag\n\t * Given an object of methods, modify each method to\n\t * return a unique id when stringifyed\n\t */\n\n\tvar mapBy = _interopRequire(__webpack_require__(1));\n\n\tvar uid = 0;\n\n\tfunction isFunction(value) {\n\t  return typeof value === \"function\";\n\t}\n\n\tfunction decorate(fn, key) {\n\t  var copy = fn.bind(null);\n\t  var id = \"_\" + key + \"_\" + uid++;\n\n\t  copy.toString = function () {\n\t    return id;\n\t  };\n\n\t  return copy;\n\t}\n\n\tmodule.exports = function (actions) {\n\t  return mapBy(Object.keys(actions), function (key) {\n\t    var value = actions[key];\n\t    return isFunction(value) ? decorate(value, key) : value;\n\t  });\n\t};\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*!\n\t * is-equal-shallow <https://github.com/jonschlinkert/is-equal-shallow>\n\t *\n\t * Copyright (c) 2015, Jon Schlinkert.\n\t * Licensed under the MIT License.\n\t */\n\n\t'use strict';\n\n\tvar isPrimitive = __webpack_require__(9);\n\n\tmodule.exports = function isEqual(a, b) {\n\t  if (!a && !b) { return true; }\n\t  if (!a && b || a && !b) { return false; }\n\n\t  for (var key in b) {\n\t    if (!isPrimitive(b[key]) || !a.hasOwnProperty(key) || (a[key] !== b[key])) {\n\t      return false;\n\t    }\n\t  }\n\t  return true;\n\t};\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*!\n\t * is-primitive <https://github.com/jonschlinkert/is-primitive>\n\t *\n\t * Copyright (c) 2014 Jon Schlinkert, contributors.\n\t * Licensed under the MIT License\n\t */\n\n\t'use strict';\n\n\t// see http://jsperf.com/testing-value-is-primitive/5\n\tmodule.exports = function isPrimitive(value) {\n\t  switch (typeof value) {\n\t    case \"string\":\n\t    case \"number\":\n\t    case \"boolean\":\n\t    case \"symbol\":\n\t      return true;\n\t    }\n\n\t  return value == null;\n\t};\n\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** Microcosm.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap f31c49793fca00fc8aa8\n **/","/**\n * Microcosm\n * An isomorphic flux implimentation. The strength of Microcosm\n * is that each application is its own fully encapsulated world\n */\n\nexport let tag = require('./tag')\nexport default require('./Microcosm')\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","/*\n * MapBy\n * Take a list and reduce it into an object\n */\n\nexport default function mapBy (array, fn) {\n  return array.reduce(function(memo, next) {\n    memo[next] = fn(next)\n    return memo\n  }, {})\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/mapBy.js\n **/","/**\n * Microcosm\n * An isomorphic flux implimentation. The strength of Microcosm\n * is that each application is its own fully encapsulated world\n */\n\nimport Store   from './Store'\nimport assert  from './assert'\nimport assign  from './assign'\nimport isEqual from 'is-equal-shallow'\nimport mapBy   from './mapBy'\nimport pulse   from './pulse'\n\nexport default class Microcosm {\n\n  constructor() {\n    pulse(this)\n\n    this._state  = this.getInitialState()\n    this._stores = []\n  }\n\n  getInitialState() {\n    // Assigns the default state. Most of the time this will not need\n    // to be overridden, however if using something like ImmutableJS,\n    // you could return a different data structure here.\n    return {}\n  }\n\n  shouldUpdate(prev, next) {\n    // Whenever an action is dispatched, the resulting state\n    // modification will be diffed to identify if a change event\n    // should fire.\n    //\n    // The default strategy for determining that state has changed\n    // is a simple shallow equals check\n    return isEqual(prev, next) === false\n  }\n\n  has(key) {\n    // Does this instance of microcosm contain the given store?\n    // Important: Uses the unique identifier, not the object reference\n    return this._stores.some(store => `${key}` === `${store}`)\n  }\n\n  get(key) {\n    // How state should be retrieved. This function is useful to\n    // override with the particular method of retrieval for the data\n    // structure returned from `getInitialState`\n    return this._state[key]\n  }\n\n  swap(next) {\n    // Swap is basically a reset where the next state is the result of\n    // folding one object over the next\n    this.reset(assign(this._state, next))\n  }\n\n  reset(next) {\n    // Given a next state, only trigger an event if state actually changed\n    if (this.shouldUpdate(this._state, next)) {\n      this._state = next\n      this.pump()\n    }\n  }\n\n  prepare(fn, ...buffer) {\n    return this.send.bind(this, fn, ...buffer)\n  }\n\n  send(fn, ...params) {\n    const request = fn.apply(this, params)\n\n    // Actions some times return promises. When this happens, wait for\n    // them to resolve before moving on\n    if (request instanceof Promise) {\n      return request.then(body => this.dispatch(fn, body))\n    }\n\n    return this.dispatch(fn, request)\n  }\n\n  dispatch(action, body) {\n    // First get all stores that can repond to this action\n    const answerable = this._stores.filter(store => action in store)\n\n    // Next build the change set\n    const changes = mapBy(answerable, store => store[action](this.get(store), body))\n\n    // Produce the next state by merging changes into the current state\n    this.swap(changes)\n\n    // Send back the body to the original signaler\n    return body\n  }\n\n  addStore(store) {\n    // Make sure life cycle methods are included\n    const safe = assign(Store, store)\n\n    // Don't reassign stores that are already included. Fail hard.\n    assert(!this.has(safe), `Tried to add \"${store}\" but it is not unique`)\n\n    // Add the validated stores to the list of known entities\n    this._stores.push(safe)\n\n    // Once verified, setup initial state. This is done last so that\n    // any callbacks that need to reduce over the current state have\n    // the latest list of stores\n    this.swap({ [safe] : safe.getInitialState() })\n  }\n\n  serialize() {\n    return mapBy(this._stores, store => store.serialize(this.get(store)))\n  }\n\n  deserialize(data={}) {\n    return mapBy(this._stores, store => store.deserialize(data[store]))\n  }\n\n  seed(data) {\n    // Tells the microcosm how it should handle data injected from\n    // sources.\n    //\n    // By default, it will clean the data with `deserialize` and\n    // then reset the existing data set with the new values\n    this.reset(this.deserialize(data))\n  }\n\n  toJSON() {\n    return this.serialize()\n  }\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Microcosm.js\n **/","export default {\n\n  getInitialState() {\n    return undefined\n  },\n\n  serialize(state) {\n    return state\n  },\n\n  deserialize(state = this.getInitialState()) {\n    return state\n  },\n\n  toString() {\n    throw new Error('Stores must implement a toString() method')\n  }\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Store.js\n **/","/**\n * assert\n * If not true, throw an error\n */\n\nexport default function assert (bool, message) {\n  if (!bool) {\n    const error = new Error(message)\n\n    // Remove `assert` from the stack\n    error.framesToPop = 1;\n\n    throw error\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/assert.js\n **/","/**\n * assign\n * Non-destructively assign one object into another\n */\n\nexport default function assign (a, b) {\n  return { ...a, ...b }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/assign.js\n **/","/**\n * Pulse\n * A singular event emitter. Pulse is simply the result of pumping\n * blood.\n *\n * This is a factory/decorator depending on usage. There are some\n * compression benefits to this, prevents the need to use super.\n */\n\nfunction pulse (infuse={}) {\n  let callbacks = []\n\n  /**\n   * Given a CALLBACK function, remove it from the Set of callbacks.\n   * Throws an error if the callback is not included in the Set.\n   */\n  infuse.ignore = function (callback) {\n    callbacks = callbacks.filter(i => i !== callback)\n  }\n\n  /**\n   * Given a CALLBACK function, add it to the Set of all callbacks.\n   */\n  infuse.listen = function (callback) {\n    callbacks.push(callback)\n  }\n\n  /**\n   * Trigger every callback in the Set\n   */\n  infuse.pump = function () {\n    /**\n     * Important: do not cache the length of _callbacks\n     * in the event a callback causes later subscriptions\n     * to disappear\n     */\n    for (var i = 0; i < callbacks.length; i++) {\n      callbacks[i].call(this)\n    }\n  }\n\n  return infuse\n}\n\nexport default pulse\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/pulse.js\n **/","/**\n * Tag\n * Given an object of methods, modify each method to\n * return a unique id when stringifyed\n */\n\nimport mapBy from './mapBy'\n\nlet uid = 0\n\nfunction isFunction (value) {\n  return typeof value === 'function'\n}\n\nfunction decorate (fn, key) {\n  const copy = fn.bind(null)\n  const id   = `_${ key }_${ uid++ }`\n\n  copy.toString = () => id\n\n  return copy\n}\n\nexport default actions => {\n  return mapBy(Object.keys(actions), function(key) {\n    const value = actions[key]\n    return isFunction(value) ? decorate(value, key) : value\n  })\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/tag.js\n **/","/*!\n * is-equal-shallow <https://github.com/jonschlinkert/is-equal-shallow>\n *\n * Copyright (c) 2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\nvar isPrimitive = require('is-primitive');\n\nmodule.exports = function isEqual(a, b) {\n  if (!a && !b) { return true; }\n  if (!a && b || a && !b) { return false; }\n\n  for (var key in b) {\n    if (!isPrimitive(b[key]) || !a.hasOwnProperty(key) || (a[key] !== b[key])) {\n      return false;\n    }\n  }\n  return true;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/is-equal-shallow/index.js\n ** module id = 8\n ** module chunks = 0\n **/","/*!\n * is-primitive <https://github.com/jonschlinkert/is-primitive>\n *\n * Copyright (c) 2014 Jon Schlinkert, contributors.\n * Licensed under the MIT License\n */\n\n'use strict';\n\n// see http://jsperf.com/testing-value-is-primitive/5\nmodule.exports = function isPrimitive(value) {\n  switch (typeof value) {\n    case \"string\":\n    case \"number\":\n    case \"boolean\":\n    case \"symbol\":\n      return true;\n    }\n\n  return value == null;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/is-equal-shallow/~/is-primitive/index.js\n ** module id = 9\n ** module chunks = 0\n **/"],"sourceRoot":""}