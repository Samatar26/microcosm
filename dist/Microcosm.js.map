{"version":3,"sources":["Microcosm.js","webpack/bootstrap 6782258a530df061fdda","./src/index.js","./src/Heartbeat.js","./src/Microcosm.js","./src/tag.js","./~/is-equal-shallow/index.js","./~/is-equal-shallow/~/is-primitive/index.js"],"names":["module","exports","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","__esModule","tag","_classCallCheck","instance","Constructor","TypeError","Heartbeat","this","_callbacks","prototype","ignore","callback","filter","i","listen","concat","pump","length","_interopRequire","obj","_extends","Object","assign","target","arguments","source","key","hasOwnProperty","_inherits","subClass","superClass","create","constructor","value","enumerable","writable","configurable","__proto__","isEqual","Microcosm","_Heartbeat","_stores","_state","getInitialState","shouldUpdate","prev","next","seed","data","clean","deserialize","keys","forEach","set","_extends2","has","store","indexOf","get","send","fn","_this","_len","params","Array","_key","bind","request","apply","undefined","Promise","then","body","dispatch","action","answerable","changes","reduce","state","addStore","stores","initializers","serialize","serializers","memo","safe","toJSON","uid","decorate","copy","toString","actions","isPrimitive","a","b"],"mappings":"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","file":"Microcosm.js","sourcesContent":["module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\n\texports.__esModule = true;\n\t/**\n\t * Microcosm\n\t * An isomorphic flux implimentation. The strength of Microcosm\n\t * is that each application is its own fully encapsulated world\n\t */\n\n\tvar tag = __webpack_require__(3);\n\texports.tag = tag;\n\texports[\"default\"] = __webpack_require__(2);\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\n\tvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } };\n\n\t/**\n\t * Heartbeat\n\t * Based on Diode, emits a heartbeat whenever any store state has changed.\n\t * When Stores change, they can use this entity to broadcast\n\t * that state has changed.\n\t *\n\t * See https://github.com/vigetlabs/diode\n\t */\n\n\tvar Heartbeat = (function () {\n\t  function Heartbeat() {\n\t    _classCallCheck(this, Heartbeat);\n\n\t    this._callbacks = [];\n\t  }\n\n\t  /**\n\t   * Given a CALLBACK function, remove it from the Set of callbacks.\n\t   * Throws an error if the callback is not included in the Set.\n\t   */\n\n\t  Heartbeat.prototype.ignore = function ignore(callback) {\n\t    this._callbacks = this._callbacks.filter(function (i) {\n\t      return i !== callback;\n\t    });\n\t  };\n\n\t  /**\n\t   * Given a CALLBACK function, add it to the Set of all callbacks.\n\t   */\n\n\t  Heartbeat.prototype.listen = function listen(callback) {\n\t    this._callbacks = this._callbacks.concat(callback);\n\t  };\n\n\t  /**\n\t   * Trigger every callback in the Set\n\t   */\n\n\t  Heartbeat.prototype.pump = function pump() {\n\t    /**\n\t     * Important: do not cache the length of _callbacks\n\t     * in the event a callback causes later subscriptions\n\t     * to disappear\n\t     */\n\t    for (var i = 0; i < this._callbacks.length; i++) {\n\t      this._callbacks[i]();\n\t    }\n\t  };\n\n\t  return Heartbeat;\n\t})();\n\n\tmodule.exports = Heartbeat;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\n\tvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj[\"default\"] : obj; };\n\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n\tvar _inherits = function (subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; };\n\n\tvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } };\n\n\t/**\n\t * Microcosm\n\t * An isomorphic flux implimentation. The strength of Microcosm\n\t * is that each application is its own fully encapsulated world\n\t */\n\n\tvar Heartbeat = _interopRequire(__webpack_require__(1));\n\n\tvar isEqual = _interopRequire(__webpack_require__(4));\n\n\tvar Microcosm = (function (_Heartbeat) {\n\t  function Microcosm() {\n\t    _classCallCheck(this, Microcosm);\n\n\t    _Heartbeat.call(this);\n\n\t    this._stores = [];\n\t    this._state = this.getInitialState();\n\t  }\n\n\t  _inherits(Microcosm, _Heartbeat);\n\n\t  Microcosm.prototype.getInitialState = function getInitialState() {\n\t    return {};\n\t  };\n\n\t  Microcosm.prototype.shouldUpdate = function shouldUpdate(prev, next) {\n\t    return isEqual(prev, next) == false;\n\t  };\n\n\t  Microcosm.prototype.seed = function seed(data) {\n\t    var clean = this.deserialize(data);\n\n\t    Object.keys(clean).forEach(function (key) {\n\t      return this.set(key, clean[key]);\n\t    }, this);\n\t  };\n\n\t  Microcosm.prototype.set = function set(key, value) {\n\t    this._state = _extends({}, this._state, (function () {\n\t      var _extends2 = {};\n\t      _extends2[key] = value;\n\t      return _extends2;\n\t    })());\n\t  };\n\n\t  Microcosm.prototype.has = function has(store) {\n\t    return this._stores.indexOf(store) > -1;\n\t  };\n\n\t  Microcosm.prototype.get = function get(store, seed) {\n\t    return this._state[store];\n\t  };\n\n\t  Microcosm.prototype.send = function send(fn) {\n\t    var _this = this;\n\n\t    for (var _len = arguments.length, params = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t      params[_key - 1] = arguments[_key];\n\t    }\n\n\t    // Allow currying of send method for cleaner callbacks\n\t    if (params.length < fn.length) {\n\t      return this.send.bind(this, fn);\n\t    }\n\n\t    var request = fn.apply(undefined, params);\n\n\t    // Actions some times return promises. When this happens, wait for\n\t    // them to resolve before moving on\n\t    if (request instanceof Promise) {\n\t      return request.then(function (body) {\n\t        return _this.dispatch(fn, body);\n\t      });\n\t    }\n\n\t    return this.dispatch(fn, request);\n\t  };\n\n\t  Microcosm.prototype.dispatch = function dispatch(action, body) {\n\t    var _this = this;\n\n\t    // First get all stores that can repond to this action\n\t    var answerable = this._stores.filter(function (store) {\n\t      return action in store;\n\t    });\n\n\t    // Next build the change set\n\t    var changes = answerable.reduce(function (state, store) {\n\t      state[store] = store[action](_this.get(store), body);\n\t      return state;\n\t    }, {});\n\n\t    // Produce the next state by folding changes into the current state\n\t    var next = _extends({}, this._state, changes);\n\n\t    // Finally, only trigger an event if state actually changed\n\t    if (this.shouldUpdate(this._state, next)) {\n\t      this._state = next;\n\t      this.pump();\n\t    }\n\n\t    // Send back the body to the original signaler\n\t    return body;\n\t  };\n\n\t  Microcosm.prototype.addStore = function addStore() {\n\t    var _this = this;\n\n\t    for (var _len = arguments.length, stores = Array(_len), _key = 0; _key < _len; _key++) {\n\t      stores[_key] = arguments[_key];\n\t    }\n\n\t    // Stores can provide a `getInitialState` method which dictates\n\t    // the expected initial state when the Store is added\n\t    var initializers = stores.filter(function (store) {\n\t      return \"getInitialState\" in store;\n\t    });\n\n\t    initializers.forEach(function (store) {\n\t      return _this.set(store, store.getInitialState());\n\t    });\n\n\t    this._stores = this._stores.concat(stores);\n\t  };\n\n\t  Microcosm.prototype.serialize = function serialize() {\n\t    var _this = this;\n\n\t    // Stores can provide a `serialize` method which shapes how\n\t    // state is converted to JSON\n\t    var serializers = this._stores.filter(function (store) {\n\t      return \"serialize\" in store;\n\t    });\n\n\t    return serializers.reduce(function (memo, store) {\n\t      memo[store] = store.serialize(_this.get(store));\n\t      return memo;\n\t    }, _extends({}, this._state));\n\t  };\n\n\t  Microcosm.prototype.deserialize = function deserialize(data) {\n\t    var safe = this._stores.filter(function (store) {\n\t      return store in data;\n\t    }).filter(function (store) {\n\t      return \"deserialize\" in store;\n\t    });\n\n\t    return safe.reduce(function (memo, store) {\n\t      memo[store] = store.deserialize(data[store]);\n\t      return memo;\n\t    }, _extends({}, data));\n\t  };\n\n\t  Microcosm.prototype.toJSON = function toJSON() {\n\t    return this.serialize();\n\t  };\n\n\t  return Microcosm;\n\t})(Heartbeat);\n\n\tmodule.exports = Microcosm;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\n\t/**\n\t * Tag\n\t * Given an object of methods, modify each method to\n\t * return a unique id when stringifyed\n\t */\n\n\tvar uid = 0;\n\n\tvar decorate = function (fn) {\n\t  var copy = fn.bind(null);\n\t  var id = \"_microcosm-\" + uid++;\n\n\t  copy.toString = function () {\n\t    return id;\n\t  };\n\n\t  return copy;\n\t};\n\n\tmodule.exports = function (actions) {\n\t  var keys = Object.keys(actions);\n\n\t  return keys.reduce(function (memo, key) {\n\t    memo[key] = decorate(actions[key], key);\n\t    return memo;\n\t  }, {});\n\t};\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*!\n\t * is-equal-shallow <https://github.com/jonschlinkert/is-equal-shallow>\n\t *\n\t * Copyright (c) 2015, Jon Schlinkert.\n\t * Licensed under the MIT License.\n\t */\n\n\t'use strict';\n\n\tvar isPrimitive = __webpack_require__(5);\n\n\tmodule.exports = function isEqual(a, b) {\n\t  if (!a && !b) { return true; }\n\t  if (!a && b || a && !b) { return false; }\n\n\t  for (var key in b) {\n\t    if (!isPrimitive(b[key]) || !a.hasOwnProperty(key) || (a[key] !== b[key])) {\n\t      return false;\n\t    }\n\t  }\n\t  return true;\n\t};\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*!\n\t * is-primitive <https://github.com/jonschlinkert/is-primitive>\n\t *\n\t * Copyright (c) 2014 Jon Schlinkert, contributors.\n\t * Licensed under the MIT License\n\t */\n\n\t'use strict';\n\n\t// see http://jsperf.com/testing-value-is-primitive/5\n\tmodule.exports = function isPrimitive(value) {\n\t  switch (typeof value) {\n\t    case \"string\":\n\t    case \"number\":\n\t    case \"boolean\":\n\t    case \"symbol\":\n\t      return true;\n\t    }\n\n\t  return value == null;\n\t};\n\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** Microcosm.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 6782258a530df061fdda\n **/","/**\n * Microcosm\n * An isomorphic flux implimentation. The strength of Microcosm\n * is that each application is its own fully encapsulated world\n */\n\nexport let tag = require('./tag')\nexport default require('./Microcosm')\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","/**\n * Heartbeat\n * Based on Diode, emits a heartbeat whenever any store state has changed.\n * When Stores change, they can use this entity to broadcast\n * that state has changed.\n *\n * See https://github.com/vigetlabs/diode\n */\n\nexport default class Heartbeat {\n\n  constructor() {\n    this._callbacks = []\n  }\n\n  /**\n   * Given a CALLBACK function, remove it from the Set of callbacks.\n   * Throws an error if the callback is not included in the Set.\n   */\n  ignore(callback) {\n    this._callbacks = this._callbacks.filter(i => i !== callback)\n  }\n\n  /**\n   * Given a CALLBACK function, add it to the Set of all callbacks.\n   */\n  listen(callback) {\n    this._callbacks = this._callbacks.concat(callback)\n  }\n\n  /**\n   * Trigger every callback in the Set\n   */\n  pump() {\n    /**\n     * Important: do not cache the length of _callbacks\n     * in the event a callback causes later subscriptions\n     * to disappear\n     */\n    for (var i = 0; i < this._callbacks.length; i++) {\n      this._callbacks[i]()\n    }\n  }\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Heartbeat.js\n **/","/**\n * Microcosm\n * An isomorphic flux implimentation. The strength of Microcosm\n * is that each application is its own fully encapsulated world\n */\n\nimport Heartbeat from 'Heartbeat'\nimport isEqual   from 'is-equal-shallow'\n\nexport default class Microcosm extends Heartbeat {\n\n  constructor() {\n    super()\n\n    this._stores = []\n    this._state  = this.getInitialState()\n  }\n\n  getInitialState() {\n    return {}\n  }\n\n  shouldUpdate(prev, next) {\n    return isEqual(prev, next) == false\n  }\n\n  seed(data) {\n    let clean = this.deserialize(data)\n\n    Object.keys(clean).forEach(function(key) {\n      return this.set(key, clean[key])\n    }, this)\n  }\n\n  set(key, value) {\n    this._state = { ...this._state, [key]: value }\n  }\n\n  has(store) {\n    return this._stores.indexOf(store) > -1\n  }\n\n  get(store, seed) {\n    return this._state[store]\n  }\n\n  send(fn, ...params) {\n    // Allow currying of send method for cleaner callbacks\n    if (params.length < fn.length) {\n      return this.send.bind(this, fn)\n    }\n\n    let request = fn(...params)\n\n    // Actions some times return promises. When this happens, wait for\n    // them to resolve before moving on\n    if (request instanceof Promise) {\n      return request.then(body => this.dispatch(fn, body))\n    }\n\n    return this.dispatch(fn, request)\n  }\n\n  dispatch(action, body) {\n    // First get all stores that can repond to this action\n    let answerable = this._stores.filter(store => action in store)\n\n    // Next build the change set\n    let changes = answerable.reduce((state, store) => {\n      state[store] = store[action](this.get(store), body)\n      return state\n    }, {})\n\n    // Produce the next state by folding changes into the current state\n    let next = { ...this._state, ...changes }\n\n    // Finally, only trigger an event if state actually changed\n    if (this.shouldUpdate(this._state, next)) {\n      this._state = next\n      this.pump()\n    }\n\n    // Send back the body to the original signaler\n    return body\n  }\n\n  addStore(...stores) {\n    // Stores can provide a `getInitialState` method which dictates\n    // the expected initial state when the Store is added\n    var initializers = stores.filter(store => 'getInitialState' in store)\n\n    initializers.forEach(store => this.set(store, store.getInitialState()))\n\n    this._stores = this._stores.concat(stores)\n  }\n\n  serialize() {\n    // Stores can provide a `serialize` method which shapes how\n    // state is converted to JSON\n    let serializers = this._stores.filter(store => 'serialize' in store)\n\n    return serializers.reduce((memo, store) => {\n      memo[store] = store.serialize(this.get(store))\n      return memo\n    }, { ...this._state })\n  }\n\n  deserialize(data) {\n    let safe = this._stores.filter(store => store in data)\n                           .filter(store => 'deserialize' in store)\n\n    return safe.reduce(function(memo, store) {\n      memo[store] = store.deserialize(data[store])\n      return memo\n    }, { ...data })\n  }\n\n  toJSON() {\n    return this.serialize()\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Microcosm.js\n **/","/**\n * Tag\n * Given an object of methods, modify each method to\n * return a unique id when stringifyed\n */\n\nlet uid = 0\n\nlet decorate = fn => {\n  let copy = fn.bind(null)\n  let id   = `_microcosm-${ uid++ }`\n\n  copy.toString = () => id\n\n  return copy\n}\n\nexport default actions => {\n  let keys = Object.keys(actions)\n\n  return keys.reduce((memo, key) => {\n    memo[key] = decorate(actions[key], key)\n    return memo\n  }, {})\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/tag.js\n **/","/*!\n * is-equal-shallow <https://github.com/jonschlinkert/is-equal-shallow>\n *\n * Copyright (c) 2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\nvar isPrimitive = require('is-primitive');\n\nmodule.exports = function isEqual(a, b) {\n  if (!a && !b) { return true; }\n  if (!a && b || a && !b) { return false; }\n\n  for (var key in b) {\n    if (!isPrimitive(b[key]) || !a.hasOwnProperty(key) || (a[key] !== b[key])) {\n      return false;\n    }\n  }\n  return true;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/is-equal-shallow/index.js\n ** module id = 4\n ** module chunks = 0\n **/","/*!\n * is-primitive <https://github.com/jonschlinkert/is-primitive>\n *\n * Copyright (c) 2014 Jon Schlinkert, contributors.\n * Licensed under the MIT License\n */\n\n'use strict';\n\n// see http://jsperf.com/testing-value-is-primitive/5\nmodule.exports = function isPrimitive(value) {\n  switch (typeof value) {\n    case \"string\":\n    case \"number\":\n    case \"boolean\":\n    case \"symbol\":\n      return true;\n    }\n\n  return value == null;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/is-equal-shallow/~/is-primitive/index.js\n ** module id = 5\n ** module chunks = 0\n **/"],"sourceRoot":""}