{"version":3,"sources":["Microcosm.js","webpack/bootstrap 2f8e867337de5d89b664","./src/index.js","./src/Heartbeat.js","./src/Microcosm.js","./src/tag.js","./src/transpose.js"],"names":["module","exports","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","__esModule","tag","_classCallCheck","instance","Constructor","TypeError","Heartbeat","this","_callbacks","prototype","ignore","callback","filter","i","listen","concat","pump","length","_interopRequire","obj","_extends","Object","assign","target","arguments","source","key","hasOwnProperty","_inherits","subClass","superClass","create","constructor","value","enumerable","writable","configurable","__proto__","Microcosm","_Heartbeat","_stores","_state","seed","data","insert","forEach","store","set","getInitialState","_extends2","has","some","get","send","fn","params","_this","request","Promise","then","body","dispatch","type","reduce","state","addStore","_len","Array","_key","toJSON","serialize","memo","transpose","uid","infuse","copy","bind","toString","actions","_x","entity","undefined","initial","keys"],"mappings":"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","file":"Microcosm.js","sourcesContent":["module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\n\texports.__esModule = true;\n\t/**\n\t * Microcosm\n\t * An isomorphic flux implimentation. The strength of Microcosm\n\t * is that each application is its own fully encapsulated world\n\t */\n\n\tvar tag = __webpack_require__(3);\n\texports.tag = tag;\n\texports[\"default\"] = __webpack_require__(2);\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\n\tvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } };\n\n\t/**\n\t * Heartbeat\n\t * Based on Diode, emits a heartbeat whenever any store state has changed.\n\t * When Stores change, they can use this entity to broadcast\n\t * that state has changed.\n\t *\n\t * See https://github.com/vigetlabs/diode\n\t */\n\n\tvar Heartbeat = (function () {\n\t  function Heartbeat() {\n\t    _classCallCheck(this, Heartbeat);\n\n\t    this._callbacks = [];\n\t  }\n\n\t  /**\n\t   * Given a CALLBACK function, remove it from the Set of callbacks.\n\t   * Throws an error if the callback is not included in the Set.\n\t   */\n\n\t  Heartbeat.prototype.ignore = function ignore(callback) {\n\t    this._callbacks = this._callbacks.filter(function (i) {\n\t      return i !== callback;\n\t    });\n\t  };\n\n\t  /**\n\t   * Given a CALLBACK function, add it to the Set of all callbacks.\n\t   */\n\n\t  Heartbeat.prototype.listen = function listen(callback) {\n\t    this._callbacks = this._callbacks.concat(callback);\n\t  };\n\n\t  /**\n\t   * Trigger every callback in the Set\n\t   */\n\n\t  Heartbeat.prototype.pump = function pump() {\n\t    /**\n\t     * Important: do not cache the length of _callbacks\n\t     * in the event a callback causes later subscriptions\n\t     * to disappear\n\t     */\n\t    for (var i = 0; i < this._callbacks.length; i++) {\n\t      this._callbacks[i]();\n\t    }\n\t  };\n\n\t  return Heartbeat;\n\t})();\n\n\tmodule.exports = Heartbeat;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\n\tvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj[\"default\"] : obj; };\n\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n\tvar _inherits = function (subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; };\n\n\tvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } };\n\n\t/**\n\t * Microcosm\n\t * An isomorphic flux implimentation. The strength of Microcosm\n\t * is that each application is its own fully encapsulated world\n\t */\n\n\tvar Heartbeat = _interopRequire(__webpack_require__(1));\n\n\tvar Microcosm = (function (_Heartbeat) {\n\t  function Microcosm() {\n\t    _classCallCheck(this, Microcosm);\n\n\t    _Heartbeat.call(this);\n\n\t    this._stores = [];\n\t    this._state = {};\n\t  }\n\n\t  _inherits(Microcosm, _Heartbeat);\n\n\t  Microcosm.prototype.seed = function seed(data) {\n\t    var insert = this._stores.filter(function (i) {\n\t      return data[i];\n\t    });\n\n\t    insert.forEach(function (store) {\n\t      this.set(store, store.getInitialState(data[store]));\n\t    }, this);\n\t  };\n\n\t  Microcosm.prototype.set = function set(key, value) {\n\t    this._state = _extends({}, this._state, (function () {\n\t      var _extends2 = {};\n\t      _extends2[key] = value;\n\t      return _extends2;\n\t    })());\n\t  };\n\n\t  Microcosm.prototype.has = function has(store) {\n\t    return this._stores.some(function (i) {\n\t      return i == store;\n\t    });\n\t  };\n\n\t  Microcosm.prototype.get = function get(store, seed) {\n\t    return this._state[store] || store.getInitialState(seed);\n\t  };\n\n\t  Microcosm.prototype.send = function send(fn, params) {\n\t    var _this = this;\n\n\t    var request = fn(params);\n\n\t    if (request instanceof Promise) {\n\t      return request.then(function (body) {\n\t        return _this.dispatch(fn, body);\n\t      });\n\t    }\n\n\t    return this.dispatch(fn, request);\n\t  };\n\n\t  Microcosm.prototype.dispatch = function dispatch(type, body) {\n\t    var _this = this;\n\n\t    this._state = this._stores.reduce(function (state, store) {\n\t      if (type in store) {\n\t        state[store] = store[type](_this.get(store), body);\n\t      }\n\t      return state;\n\t    }, _extends({}, this._state));\n\n\t    this.pump();\n\n\t    return body;\n\t  };\n\n\t  Microcosm.prototype.addStore = function addStore() {\n\t    for (var _len = arguments.length, store = Array(_len), _key = 0; _key < _len; _key++) {\n\t      store[_key] = arguments[_key];\n\t    }\n\n\t    this._stores = this._stores.concat(store);\n\t  };\n\n\t  Microcosm.prototype.toJSON = function toJSON() {\n\t    return this.serialize();\n\t  };\n\n\t  Microcosm.prototype.serialize = function serialize() {\n\t    var _this = this;\n\n\t    return this._stores.reduce(function (memo, store) {\n\t      memo[store] = _this.get(store);\n\t      return memo;\n\t    }, {});\n\t  };\n\n\t  return Microcosm;\n\t})(Heartbeat);\n\n\tmodule.exports = Microcosm;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\n\tvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj[\"default\"] : obj; };\n\n\texports.__esModule = true;\n\t/**\n\t * Tag\n\t * Given an object of methods, modify each method to\n\t * return a unique id when stringifyed\n\t */\n\n\tvar transpose = _interopRequire(__webpack_require__(4));\n\n\tvar uid = 0;\n\n\tvar infuse = function (fn) {\n\t  var copy = fn.bind(null);\n\t  var id = \"_microcosm-\" + uid++;\n\n\t  copy.toString = function () {\n\t    return id;\n\t  };\n\n\t  return copy;\n\t};\n\n\texports.infuse = infuse;\n\n\texports[\"default\"] = function (actions) {\n\t  return transpose(actions, infuse);\n\t};\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\n\t/**\n\t * Transpose\n\t * Reduces over a value, setting the current index/key\n\t * to the result of a given function.\n\t *\n\t * For example:\n\t * transpose({ foo: 'bar' }, word => word.toUpperCase()) = { foo: 'BAR' }\n\t *\n\t */\n\n\tmodule.exports = function (_x, fn) {\n\t  var entity = arguments[0] === undefined ? {} : arguments[0];\n\t  var initial = arguments[2] === undefined ? {} : arguments[2];\n\n\t  var keys = Object.keys(entity);\n\n\t  return keys.reduce(function (memo, key) {\n\t    memo[key] = fn(entity[key], key);\n\t    return memo;\n\t  }, initial);\n\t};\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** Microcosm.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 2f8e867337de5d89b664\n **/","/**\n * Microcosm\n * An isomorphic flux implimentation. The strength of Microcosm\n * is that each application is its own fully encapsulated world\n */\n\nexport let tag = require('./tag')\nexport default require('./Microcosm')\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","/**\n * Heartbeat\n * Based on Diode, emits a heartbeat whenever any store state has changed.\n * When Stores change, they can use this entity to broadcast\n * that state has changed.\n *\n * See https://github.com/vigetlabs/diode\n */\n\nexport default class Heartbeat {\n\n  constructor() {\n    this._callbacks = []\n  }\n\n  /**\n   * Given a CALLBACK function, remove it from the Set of callbacks.\n   * Throws an error if the callback is not included in the Set.\n   */\n  ignore(callback) {\n    this._callbacks = this._callbacks.filter(i => i !== callback)\n  }\n\n  /**\n   * Given a CALLBACK function, add it to the Set of all callbacks.\n   */\n  listen(callback) {\n    this._callbacks = this._callbacks.concat(callback)\n  }\n\n  /**\n   * Trigger every callback in the Set\n   */\n  pump() {\n    /**\n     * Important: do not cache the length of _callbacks\n     * in the event a callback causes later subscriptions\n     * to disappear\n     */\n    for (var i = 0; i < this._callbacks.length; i++) {\n      this._callbacks[i]()\n    }\n  }\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Heartbeat.js\n **/","/**\n * Microcosm\n * An isomorphic flux implimentation. The strength of Microcosm\n * is that each application is its own fully encapsulated world\n */\n\nimport Heartbeat from 'Heartbeat'\n\nexport default class Microcosm extends Heartbeat {\n\n  constructor() {\n    super()\n\n    this._stores = []\n    this._state  = {}\n  }\n\n  seed(data) {\n    let insert = this._stores.filter(i => data[i])\n\n    insert.forEach(function(store) {\n      this.set(store, store.getInitialState(data[store]))\n    }, this)\n  }\n\n  set(key, value) {\n    this._state = { ...this._state, [key]: value }\n  }\n\n  has(store) {\n    return this._stores.some(i => i == store)\n  }\n\n  get(store, seed) {\n    return this._state[store] || store.getInitialState(seed)\n  }\n\n  send(fn, params) {\n    let request = fn(params)\n\n    if (request instanceof Promise) {\n      return request.then(body => this.dispatch(fn, body))\n    }\n\n    return this.dispatch(fn, request)\n  }\n\n  dispatch(type, body) {\n    this._state = this._stores.reduce((state, store) => {\n      if (type in store) {\n        state[store] = store[type](this.get(store), body)\n      }\n      return state\n    }, { ...this._state })\n\n    this.pump()\n\n    return body\n  }\n\n  addStore(...store) {\n    this._stores = this._stores.concat(store)\n  }\n\n  toJSON() {\n    return this.serialize()\n  }\n\n  serialize() {\n    return this._stores.reduce((memo, store) => {\n      memo[store] = this.get(store)\n      return memo\n    }, {})\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Microcosm.js\n **/","/**\n * Tag\n * Given an object of methods, modify each method to\n * return a unique id when stringifyed\n */\n\nimport transpose from 'transpose'\n\nlet uid = 0\n\nexport let infuse = fn => {\n  let copy = fn.bind(null)\n  let id   = `_microcosm-${ uid++ }`\n\n  copy.toString = () => id\n\n  return copy\n}\n\nexport default actions => transpose(actions, infuse)\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/tag.js\n **/","/**\n * Transpose\n * Reduces over a value, setting the current index/key\n * to the result of a given function.\n *\n * For example:\n * transpose({ foo: 'bar' }, word => word.toUpperCase()) = { foo: 'BAR' }\n *\n */\n\nexport default (entity={}, fn, initial={}) => {\n  let keys = Object.keys(entity)\n\n  return keys.reduce((memo, key) => {\n    memo[key] = fn(entity[key], key)\n    return memo\n  }, initial)\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/transpose.js\n **/"],"sourceRoot":""}